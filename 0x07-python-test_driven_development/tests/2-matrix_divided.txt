# Testing the matrix_divided function in the 2-matrix_divided module

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, "two", 3], [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("not_a_matrix", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Additional test cases for the matrix_divided function in the 2-matrix_divided module

>>> matrix_divided([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[5, 5, 5], [10, 10, 10], [15, 15, 15]], 5)
[[1.0, 1.0, 1.0], [2.0, 2.0, 2.0], [3.0, 3.0, 3.0]]

>>> matrix_divided([[0, 0, 0], [0, 0, 0]], 2)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 1.5)
[[1.0, 1.67, 2.33], [3.0, 3.67, 4.33]]

>>> matrix_divided([[1, 2], [3, 4], [5, 6]], -1)
[[-1.0, -2.0], [-3.0, -4.0], [-5.0, -6.0]]

>>> matrix_divided([[2.5]], 0.5)
[[5.0]]

>>> matrix_divided([[]], 2)
[[]]

>>> matrix_divided([], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], "divisor")
Traceback (most recent call last):
...
TypeError: div must be a number
